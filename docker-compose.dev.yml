version: "3"
services:
  # nginx:
  #   build:
  #     context: ./services/nginx
  #     args:
  #       NGINX_VERSION: ${NGINX_VERSION}
  #       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #       NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
  #   container_name: nginx
  #   ports:
  #     - "${NGINX_HTTP_HOST_PORT}:80"
  #     - "${NGINX_HTTPS_HOST_PORT}:443"
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #     - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
  #     - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
  #     - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
  #     - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
  #     - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
  #     - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
  #   restart: always
  #   environment:
  #     TZ: "$TZ"
  #   restart: always
  #   networks:
  #     - default

  php71:
    container_name: php71
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP71_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP71_EXTENSIONS}
        TZ: "$TZ"
    ports:
      - "${PHP71_XDEBUG_REMOTE_PORT}:${PHP71_XDEBUG_REMOTE_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP71_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP71_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP71_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php72:
    container_name: php72
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP72_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP72_EXTENSIONS}
        TZ: "$TZ"
    ports:
      - "${PHP72_XDEBUG_REMOTE_PORT}:${PHP72_XDEBUG_REMOTE_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php73:
    container_name: php73
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP73_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
        TZ: "$TZ"
    ports:
      - "${PHP73_XDEBUG_REMOTE_PORT}:${PHP73_XDEBUG_REMOTE_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php74:
    container_name: php74
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP74_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP74_EXTENSIONS}
        TZ: "$TZ"
    ports:
      - "${PHP74_XDEBUG_REMOTE_PORT}:${PHP74_XDEBUG_REMOTE_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP74_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP74_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  php56:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        TZ: "$TZ"
    container_name: php56
    ports:
      - "${PHP56_XDEBUG_REMOTE_PORT}:${PHP56_XDEBUG_REMOTE_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  # php54:
  #  build:
  #    context: ./services/php54
  #    args:
  #      PHP_VERSION: php:${PHP54_VERSION}-fpm
  #      CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #      PHP_EXTENSIONS: ${PHP54_EXTENSIONS}
  #      TZ: "$TZ"
  #  container_name: php54
  #  ports:
  #    - "${PHP54_XDEBUG_REMOTE_PORT}:${PHP54_XDEBUG_REMOTE_PORT}"
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - ${SOURCE_DIR}:/www/:rw
  #    - ${PHP54_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
  #    - ${PHP54_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
  #    - ${PHP54_LOG_DIR}:/var/log/php
  #  restart: always
  #  cap_add:
  #    - SYS_PTRACE
  #  networks:
  #    - default

  # mysql:
  #   image: mysql:${MYSQL_VERSION}
  #   container_name: mysql
  #   ports:
  #     - "${MYSQL_HOST_PORT}:3306"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
  #     - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
  #   restart: always
  #   networks:
  #     - default
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  #     TZ: "$TZ"

  mysql:
    image: mysql:${MYSQL5_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL5_HOST_PORT}:3306"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
      TZ: "$TZ"

  openresty:
    image:  openresty/openresty:${OPENRESTY_VERSION}
    container_name: openresty
    ports:
      - "${OPENRESTY_HTTP_HOST_PORT}:80"
      - "${OPENRESTY_HTTPS_HOST_PORT}:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
      - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
      - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
      - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    environment:
      TZ: "$TZ"
    networks:
      - default

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
      - ${REDIS_LOG_DIR}:/var/log/redis:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  # memcached:
  #  image: memcached:${MEMCACHED_VERSION}
  #  container_name: memcached
  #  ports:
  #    - "${MEMCACHED_HOST_PORT}:11211"
  #  environment:
  #     MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
  #  networks:
  #    - default

  # rabbitmq:
  #   image: rabbitmq:${RABBITMQ_VERSION}
  #   container_name: rabbitmq
  #   restart: always
  #   ports:
  #     - "${RABBITMQ_HOST_PORT_C}:5672"
  #     - "${RABBITMQ_HOST_PORT_S}:15672"
  #   restart: always
  #   environment:
  #     TZ: "$TZ"
  #     RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  #     RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
  #   networks:
  #     - default

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
    networks:
      - default
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - TZ=$TZ

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: phpredisadmin
    ports:
      - "${REDISMYADMIN_HOST_PORT}:80"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - TZ=$TZ

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   container_name: mongodb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
  #     MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
  #     TZ: "$TZ"
  #   restart: always
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR}/mongo:/data/db:rw
  #     - ${DATA_DIR}/mongo_key:/mongo:rw
  #   ports:
  #     - "${MONGODB_HOST_PORT}:27017"
  #   networks:
  #     - default
  #   command:
  #     --auth

  # adminmongo:
  #   image: mrvautin/adminmongo
  #   container_name: adminmongo
  #   ports:
  #     - "${ADMINMONGO_HOST_PORT}:1234"
  #   environment:
  #     - HOST=0.0.0.0
  #     - DB_HOST=mongodb
  #     - DB_PORT=27017
  #   networks:
  #     - default

  # elasticsearch:
  #   build:
  #     context: ./services/elasticsearch
  #     args:
  #       ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
  #       ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
  #   container_name: elasticsearch
  #   environment:
  #     - TZ=$TZ
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
  #     - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
  #   hostname: elasticsearch
  #   restart: always
  #   ports:
  #     - "${ELASTICSEARCH_HOST_PORT_C}:9200"
  #     - "${ELASTICSEARCH_HOST_PORT_S}:9300"

  # kibana:
  #   image: kibana:${KIBANA_VERSION}
  #   container_name: kibana
  #   environment:
  #     TZ: "$TZ"
  #     elasticsearch.hosts: http://elasticsearch:9200
  #   hostname: kibana
  #   depends_on:
  #     - elasticsearch
  #   restart: always
  #   ports:
  #     - "${KIBANA_HOST}:5601"

  # logstash:
  #   image: logstash:${LOGSTASH_VERSION}
  #   container_name: logstash
  #   hostname: logstash
  #   restart: always
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     TZ: "$TZ"
  #   ports:
  #     - "${LOGSTASH_HOST_PORT_C}:9600"
  #     - "${LOGSTASH_HOST_PORT_S}:5044"

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/portainer/data:/data:rw
    restart: always
    ports:
      - "${PORTAINER_HOST_PORT}:9000"
    networks:
      - default

  # stunnel-server:
  #   image: vimagick/stunnel
  #   container_name: stunnel-server
  #   ports:
  #     - "${STUNNEL_SERVER_ACCEPT_PORT}:${STUNNEL_SERVER_ACCEPT_PORT}"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${LOG_DIR}/stunnel:/var/log/stunnel4
  #     - ${STUNNEL_SERVER_KEY}:/etc/stunnel/stunnel.key:ro
  #     - ${STUNNEL_SERVER_CRT}:/etc/stunnel/stunnel.pem:ro
  #     - ${STUNNEL_SERVER_CONF}:/etc/stunnel/stunnel.conf
  #     - ./services/stunnel/stunnel4:/etc/default/stunnel4
  #   environment:
  #     - CLIENT=no
  #     - SERVICE=${STUNNEL_SERVER_NAME}
  #     - ACCEPT=0.0.0.0:${STUNNEL_SERVER_ACCEPT_PORT}
  #     - CONNECT=proxy_server:${STUNNEL_SERVER_CONNECT_PORT}
  #   extra_hosts:
  #     - proxy_server:${STUNNEL_SERVER_CONNECT_HOST}
  #   restart: always
  #   networks:
  #     - default

  # stunnel-client:
  #   image: vimagick/stunnel
  #   container_name: stunnel-client
  #   ports:
  #     - "${STUNNEL_CLIENT_ACCEPT_PORT}:${STUNNEL_CLIENT_ACCEPT_PORT}"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${LOG_DIR}/stunnel:/var/log/stunnel4
  #     - ${STUNNEL_CLIENT_CONF}:/etc/stunnel/stunnel.key:ro
  #     - ${STUNNEL_CLIENT_CONF}:/etc/stunnel/stunnel.pem:ro
  #     - ${STUNNEL_CLIENT_CONF}:/etc/stunnel/stunnel.conf
  #     - ./services/stunnel/stunnel4:/etc/default/stunnel4
  #   environment:
  #     - CLIENT=yes
  #     - SERVICE=${STUNNEL_CLIENT_NAME}
  #     - ACCEPT=0.0.0.0:${STUNNEL_CLIENT_ACCEPT_PORT}
  #     - CONNECT=server:${STUNNEL_CLIENT_CONNECT_PORT}
  #   extra_hosts:
  #     - server:${STUNNEL_CLIENT_CONNECT_HOST}
  #   restart: always
  #   networks:
  #     - default

  # squid:
  #   image: sameersbn/squid:3.5.27-2
  #   container_name: squid
  #   ports:
  #     - "${SQUID_PORT}:${SQUID_PORT}"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${SQUID_CONFIG}:/etc/squid/squid.conf
  #     - ${SQUID_CACHE}:/var/spool/squid
  #     - ${LOG_DIR}/squid:/var/log/squid:rw
  #     - ${SQUID_PASSWORD}:/etc/squid/squid.passwd:ro
  #   restart: always
  #   networks:
  #     - default

  scm-server:
    image: sdorra/scm-manager
    container_name: server
    ports:
      - "${SCM_MANAGER_PORT}:${SCM_MANAGER_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SOURCE_DIR}:/www/:rw
      - ${DATA_DIR}/scm:/var/lib/scm:rw
      - ${LOG_DIR}/scm:/var/log/scm:rw
      - ${SCM_SSH_DIR}:/opt/scm-server/.ssh
    restart: always
    networks:
      - default

  # ngrok:
  #   build:
  #     context: ./services/ngrok
  #   container_name: ngrok
  #   ports:
  #     - "${NGROK_HTTP_PORT}:80"
  #     - "${NGROK_HTTPS_PORT}:443"
  #     - "${NGROK_TUNNEL_PORT}:4443"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR}/ngrok:/myfiles
  #   environment:
  #     - DOMAIN=${NGROK_DOMAIN}
  #   command: /bin/sh /server.sh
  #   restart: always
  #   networks:
  #     - default


  # #创建php容器执行一个php常驻脚本
  # statscript:
  #   image: dnmp_php:latest
  #   container_name: statscript
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
  #     - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
  #     - ${PHP_LOG_DIR}:/var/log/php
  #   command: /bin/sh /www/localhost/start.sh
  #   restart: always
  #   networks:
  #     - default
  #
  # jenkins:
  #   image: jenkins/jenkins:lts
  #   container_name: jenkins
  #   environment:
  #     - JAVA_OPTS=-Duser.timezone=Asia/Shanghai
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR}/jenkins:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ${JENKINS_SSH_DIR}:/var/jenkins_home/.ssh
  #   restart: always
  #   ports:
  #     - "${JENKINS_PORT}:8080"
  #     - "${JENKINS_JNLP_PORT}:50000"
  #   networks:
  #     - default
  #
  vpn:
    container_name: vpn-server
    image: hwdsl2/ipsec-vpn-server
    restart: always
    env_file:
      - VPN_IPSEC_PSK=${VPN_IPSEC_PSK}
      - VPN_USER=${VPN_USER}
      - VPN_PASSWORD=${VPN_PASSWORD}
    ports:
      - "${VPN_PORT0}:500/udp"
      - "${VPN_PORT1}:4500/udp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    hostname: ipsec-vpn-server
    networks:
      - default

  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    restart: always
    hostname: ${GITLAB_HOSTNAME}
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_EXTERNAL_URL}'
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_PORT_22}
    ports:
      - "${GITLAB_PORT_22}:${GITLAB_PORT_22}"
      - "${GITLAB_PORT_80}:80"
      - "${GITLAB_PORT_443}:443"
    volumes:
      - ${GITLAB_DATA_DIR}:/var/opt/gitlab
      - ${GITLAB_LOGS_DIR}:/var/log/gitlab
      - ${GITLAB_CONFIG_DIR}:/etc/gitlab
    environment:
      TZ: "Asia/Shanghai"
    networks:
      - default

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    depends_on:
      - gitlab
    privileged: true
    volumes:
      - ${GITLAB_RUNNER_DATA_DIR}:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
      - /bin/docker:/bin/docker
    networks:
      - default

  gogs:
    image: gogs/gogs
    container_name: gogs
    ports:
      - "${GOGS_SSH_PORT}:22"
      # - "${GOGS_HTTP_PORT}:3000"
    volumes:
      - ${GOGS_DATA_DIR}:/data
    restart: always
    networks:
      - default
networks:
  default:
